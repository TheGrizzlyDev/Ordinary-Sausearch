{"version":3,"sources":["store.js","components/SearchBar.js","components/App.js","reportWebVitals.js","index.js"],"names":["UPDATE_QUERY_ACTION_TYPE","UPDATE_MIN_SAUSAGES_ACTION_TYPE","UPDATE_MAX_SAUSAGES_ACTION_TYPE","UPDATE_MIN_RUFFALOS_ACTION_TYPE","UPDATE_MAX_RUFFALOS_ACTION_TYPE","RESET_FILTERS_ACTION_TYPE","UPDATE_FILTERS_ACTION_TYPES_AND_ATTRIBUTE","updateFilter","type","value","updateQueryFilter","updateMinSausagesFilter","updateMaxSausagesFilter","updateMinRuffalosFilter","updateMaxRuffalosFilter","resetFilters","defaultFilterState","query","minSausages","maxSausages","minRuffalos","maxRuffalos","initialFilterState","queryState","queryString","window","location","search","DATASET_LOAD_ACTION_TYPE","rootReducer","combineReducers","state","action","actionType","field","loaded","values","store","createStore","composeWithDevTools","applyMiddleware","storeAPI","next","result","params","URLSearchParams","getState","filters","history","pushState","document","title","pathname","fetch","process","then","res","json","dispatch","selectFilters","selectResults","dataset","filter","sausage","name","toLowerCase","includes","sausages","ruffalos","ScoreInput","props","max","min","SearchBar","useSelector","useDispatch","dispathValueChangeEventFor","actionGenerator","callback","val","e","target","placeholder","onChange","onClick","App","results","className","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90dacc5c.chunk.js","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport * as queryString from 'query-string'\nimport { composeWithDevTools } from \"redux-devtools-extension\"\n\nconst UPDATE_QUERY_ACTION_TYPE = \"filters/update-query\"\nconst UPDATE_MIN_SAUSAGES_ACTION_TYPE = \"filters/update-min-sausages\"\nconst UPDATE_MAX_SAUSAGES_ACTION_TYPE = \"filters/update-max-sausages\"\nconst UPDATE_MIN_RUFFALOS_ACTION_TYPE = \"filters/update-min-ruffalos\"\nconst UPDATE_MAX_RUFFALOS_ACTION_TYPE = \"filters/update-max-ruffalos\"\nconst RESET_FILTERS_ACTION_TYPE = \"filters/reset\"\nconst UPDATE_FILTERS_ACTION_TYPES_AND_ATTRIBUTE = {\n    [UPDATE_QUERY_ACTION_TYPE]: 'query',\n    [UPDATE_MIN_SAUSAGES_ACTION_TYPE]: 'minSausages',\n    [UPDATE_MAX_SAUSAGES_ACTION_TYPE]: 'maxSausages',\n    [UPDATE_MIN_RUFFALOS_ACTION_TYPE]: 'minRuffalos',\n    [UPDATE_MAX_RUFFALOS_ACTION_TYPE]: 'maxRuffalos',\n}\n\nconst updateFilter = (type) => (value) =>({\n    type,\n    value\n})\n\nexport const updateQueryFilter = updateFilter(UPDATE_QUERY_ACTION_TYPE)\nexport const updateMinSausagesFilter = updateFilter(UPDATE_MIN_SAUSAGES_ACTION_TYPE)\nexport const updateMaxSausagesFilter = updateFilter(UPDATE_MAX_SAUSAGES_ACTION_TYPE)\nexport const updateMinRuffalosFilter = updateFilter(UPDATE_MIN_RUFFALOS_ACTION_TYPE)\nexport const updateMaxRuffalosFilter = updateFilter(UPDATE_MAX_RUFFALOS_ACTION_TYPE)\nexport const resetFilters = { type: RESET_FILTERS_ACTION_TYPE }\n\nconst defaultFilterState = {\n    query: '',\n    minSausages: 0,\n    maxSausages: 5,\n    minRuffalos: 0,\n    maxRuffalos: 5,\n}\n\nconst initialFilterState = (() => {\n    const queryState = queryString.parse(window.location.search)\n    return {\n        ...defaultFilterState, \n        ...queryState\n    }\n})()\n\nfunction filterReducer(state = initialFilterState, action) {\n    const actionType = action.type\n    if (actionType === RESET_FILTERS_ACTION_TYPE) {\n        return defaultFilterState\n    }\n    const field = UPDATE_FILTERS_ACTION_TYPES_AND_ATTRIBUTE[actionType];\n    if (field) {\n        return { ...state, [field]: action.value }\n    }\n    return state\n}\n\nconst DATASET_LOAD_ACTION_TYPE = \"dataset/load\"\n\nfunction datasetReducer(state = {\n    loaded: false,\n    values: []\n}, action) {\n    switch (action.type) {\n        case DATASET_LOAD_ACTION_TYPE:\n            return {\n                loaded: true,\n                values: action.value\n            }\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    'filters': filterReducer,\n    'dataset': datasetReducer\n})\n\nconst historyUpdateMiddleware = storeAPI => next => action => {\n    let result = next(action)\n    const params = new URLSearchParams(queryString.stringify(storeAPI.getState().filters))\n    window.history.pushState({}, document.title, `${window.location.pathname}?${params}`)\n    return result\n}\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(historyUpdateMiddleware)))\nfetch(process.env.PUBLIC_URL + '/dataset.json').then(res => res.json()).then(json => store.dispatch({\n    type: DATASET_LOAD_ACTION_TYPE,\n    value: json\n}))\n\nexport const selectFilters = state => state.filters\nexport const selectResults = state => state.dataset.values\n    .filter(sausage => sausage.name.toLowerCase().includes(state.filters.query.toLowerCase()))\n    .filter(sausage => sausage.sausages >= state.filters.minSausages && sausage.sausages <= state.filters.maxSausages)\n    .filter(sausage => (sausage.ruffalos || 0) >= state.filters.minRuffalos && (sausage.ruffalos || 0) <= state.filters.maxRuffalos)\n\n// TODO if this gets more complex then add https://redux.js.org/recipes/configuring-your-store#simplifying-setup-with-redux-toolkit","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { \n    updateQueryFilter, \n    updateMinSausagesFilter, \n    updateMaxSausagesFilter, \n    updateMinRuffalosFilter, \n    updateMaxRuffalosFilter,\n    resetFilters,\n    selectFilters\n} from '../store'\n\nconst ScoreInput = (props) => (<input type=\"number\" max=\"5\" min=\"0\" {...props} />)\n\nexport default function SearchBar() {\n    const filters = useSelector(selectFilters)\n    const dispatch = useDispatch()\n    const withUpdateEvent = (callback) => e => callback(e.target.value)\n    const dispathValueChangeEventFor = (actionGenerator) => withUpdateEvent(val => dispatch(actionGenerator(val)))\n\n    return (\n        <div>\n            <input type=\"text\" placeholder=\"Search\" value={filters.query} onChange={dispathValueChangeEventFor(updateQueryFilter)} />\n            Sausages: <ScoreInput value={filters.minSausages} onChange={dispathValueChangeEventFor(updateMinSausagesFilter)} /> to \n            <ScoreInput value={filters.maxSausages} onChange={dispathValueChangeEventFor(updateMaxSausagesFilter)} />\n            Ruffalos: <ScoreInput value={filters.minRuffalos} onChange={dispathValueChangeEventFor(updateMinRuffalosFilter)} /> to \n            <ScoreInput value={filters.maxRuffalos} onChange={dispathValueChangeEventFor(updateMaxRuffalosFilter)} />\n            <input type=\"button\" value=\"Reset\" onClick={() => dispatch(resetFilters)} />\n        </div>\n    )\n}","import './App.css';\nimport SearchBar from './SearchBar'\nimport { useSelector } from 'react-redux'\nimport { selectResults } from '../store'\n\nfunction App() {\n  const results = useSelector(selectResults)\n  return (\n    <div className=\"App\">\n      <SearchBar />\n      <table>\n      <thead>\n        <th>Name</th>\n        <th>Sausages</th>\n        <th>Ruffalos</th>\n      </thead>\n      {\n        results.map(({name, sausages, ruffalos}) => (\n          <tr key={name}>\n            <td>{name}</td>\n            <td>{sausages}</td>\n            <td>{ruffalos || \"N/A\"}</td>\n          </tr>\n        ))\n      }\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\n\nconst renderApp = () => render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept('./components/App', renderApp)\n}\n\nrenderApp()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}